name: build & test & publish tag for API.Library, build & push docker image
on:
  push:
    branches:
      - 5-CICD
    paths:
      - 'BACK/**'
      - '.github/workflows/workflow-backend.yaml'

defaults:
  run:
    working-directory: ./BACK/API.Library

jobs:
  api-library:
    runs-on: ubuntu-latest
    env:
      SpecFlowDirectory: Tests/Library.Tests.Specs
      SpecFlowTestAssemblyPath: bin/Release/net6.0/Library.Tests.Specs.dll
      SpecFlowTestExecutionPath: bin/Release/net6.0/TestExecution.json
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - name: Build all projects
        run: dotnet build -c Release
        shell: bash
      - name: Run tests
        run: dotnet test --no-build -c Release -v minimal
        shell: bash
      - name: Generate SpecFlow LivingDoc
        run: |
          dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
          livingdoc test-assembly $SpecFlowDirectory/$SpecFlowTestAssemblyPath -t $SpecFlowDirectory/$SpecFlowTestExecutionPath -o LivingDoc.html
        shell: bash
      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: SpecflowTestResults
          path: BACK/API.Library/LivingDoc.html
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - id: nextversion
        name: next release version
        uses: jenkins-x-plugins/jx-release-version@v2.5.2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.nextversion.outputs.version }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          target_commitish: ${{ github.ref }}
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/back_vault
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


